// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package osv;

import "google/protobuf/struct.proto";

// Commit reference.
//
// In some rare cases, this may refer to a small range of commits rather than an
// exact commit (to accomodate for automated systems). In such cases, the
// semantics are as follows:
//
// - If this is referring to a commit which introduces a vulnerability, then
// *any* commits in the range is assumed to cause the vulnerability.
//
// - If this is referring to a commit which fixes a vulnerability, then *all*
// commits in the range is assumed to cause the vulnerability.
message Commit {
  // The repository type.
  enum RepoType {
    UNSPECIFIED = 0;
    GIT = 1;
  }

  // Required. The type of the repo.
  RepoType repo_type = 1;
  // Required. The publicly accessible URL of the repo that can be directly
  // passed to clone commands.
  string repo_url = 2;
  // Required. The commit identifier (e.g. git SHA). In some cases where the
  // exact commit fails to be determined by automation, this may be a small
  // range in the form "A:B" which means the commit range from A (exclusive) to
  // B (inclusive).
  string commit = 3;
}

// Package information and version.
message Package {
  // Required. Name of the package. Should match the name used in the package
  // ecosystem (e.g. the npm package name). For C/C++ projects integrated in
  // OSS-Fuzz, this is the name used for the integration.
  string name = 1;
  // Optional. The ecosystem for this package. If omitted, the name will be
  // matched against libraries that do not have a package management ecosystem
  // (e.g. C/C++ libraries).
  string ecosystem = 2;
}

// Represents a range of commits in a branch that contain a vulnerability.
message AffectedRange {
  // Required. The earliest commit where this vulnerability was introduced in.
  Commit introduced_in = 1;
  // Optional. The commit that this vulnerability was fixed in. This must be
  // reachable from the "introduced_in" commit.
  //
  // If the vulnerability is not fixed, this will be unset.
  Commit fixed_in = 2;
}

// Affected versions and commits.
message Affects {
  // Required (at least one entry). The commit ranges that contain this
  // vulnerability. Each range entry should represent a different upstream
  // branch.
  //
  // When provided, OSV will attempt to detect cherry-picks and append affected
  // ranges for other branches.
  repeated AffectedRange ranges = 1;
  // Optional. List of affected versions. This should match tag names in the
  // upstream repository. OSV will populate or add to this automatically
  // based on the provided ranges.
  repeated string versions = 2;
}

// A vulnerability entry.
message Vulnerability {
  // Vulnerability severity information. This matches the qualitative rating
  // scale used for CVSSv3.1.
  enum Severity {
    NONE = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
    CRITICAL = 4;
  }

  // Unique identifier for this vulnerability (assigned by OSV).
  // This is of the format YEAR-N (e.g. "2020-111").
  string id = 1;
  // Required. Package information.
  Package package = 2;
  // Required. One line human readable summary for the vulnerability. It is
  // recommended to keep this under 120 characters.
  string summary = 3;
  // Required. Any additional human readable details for the vulnerability.
  string details = 4;
  // Required. Severity of the vulnerability.
  Severity severity = 5;
  // Required. Affected commit ranges and versions.
  Affects affects = 6;
  // Optional. URLs to more information/advisories (including the
  // scheme e.g "https://").
  repeated string reference_urls = 7;
  // Optional. CVEs, if allocated.
  repeated string cves = 8;
  // Optional. Additional metadata specific to the package ecosystem. For the
  // JSON REST endpoint, this is any JSON object.
  google.protobuf.Struct package_ecosystem_metadata = 9;
}
